// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TeacherEnglish;

#nullable disable

namespace TeacherEnglish.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230528090008_TpcMapping")]
    partial class TpcMapping
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence("BaseEntitySequence");

            modelBuilder.Entity("TeacherEnglish.Entities.BaseEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasDefaultValueSql("nextval('\"BaseEntitySequence\"')");

                    NpgsqlPropertyBuilderExtensions.UseSequence(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("TeacherEnglish.Entities.IrregularVerb", b =>
                {
                    b.HasBaseType("TeacherEnglish.Entities.BaseEntity");

                    b.Property<string>("Infinitive")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PastParticiple")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PastSimple")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("IrregularVerbs");
                });

            modelBuilder.Entity("TeacherEnglish.Entities.User", b =>
                {
                    b.HasBaseType("TeacherEnglish.Entities.BaseEntity");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
